name: build
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy-2.7 and pypy-3.8
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    outputs:
      version_changed: ${{ steps.check_file_changed.outputs.files_changed }}
    steps:
      - run: pip install -U pip pipenv coverage build
      - run: pip install -U numpy scipy matplotlib
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: set -o pipefail
      - name: Build and install fluidfoam
        run: |
          cd ${{ github.workspace }} && python -m build && pip install dist/fluidfoam*.whl --user
      - name: Test fluidfoam
        run: make tests
      - name: Test fluidfoam coverage
        run: make tests_coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.codecov }}
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          verbose: true        
  Publish-Pypi:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Deploy package
        uses: casperdcl/deploy-pypi@v2
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          build: --sdist --wheel --outdir dist .
          # old version : pip: wheel -w dist/ --no-deps .
          # only upload if a tag is pushed (otherwise just build & check)
          upload: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
